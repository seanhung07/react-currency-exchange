{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","url","App","toAmount","FromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFrom","setAmountInFrom","console","log","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAoBeA,MAlBf,SAAqBC,GAAO,IAEpBC,EAKAD,EALAC,gBACAC,EAIAF,EAJAE,iBACAC,EAGAH,EAHAG,iBACAC,EAEAJ,EAFAI,eACAC,EACAL,EADAK,OAEJ,OACI,qCACA,uBAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAQI,SAAUL,IAChE,wBAAQI,MAAON,EAAkBO,SAAUN,EAA3C,SACCF,EAAgBS,KAAI,SAAAC,GAAM,OAAI,wBAAqBH,MAAOG,EAA5B,SAAqCA,GAAxBA,YCV9CC,EAAM,yCAkEGC,MAjEf,WAAgB,IASVC,EAASC,EATA,EACiCC,mBAAS,IAD1C,mBACNf,EADM,KACWgB,EADX,OAE2BD,qBAF3B,mBAENE,EAFM,KAEQC,EAFR,OAGuBH,qBAHvB,mBAGNI,EAHM,KAGMC,EAHN,OAI2BL,qBAJ3B,mBAINM,EAJM,KAIQC,EAJR,OAKeP,mBAAS,GALxB,mBAKNX,EALM,KAKEmB,EALF,OAM0BR,oBAAS,GANnC,mBAMNS,EANM,KAMQC,EANR,KA4Cb,OArCAC,QAAQC,IAAI3B,GACZ0B,QAAQC,IAAIN,GAETG,GACDV,EAAaV,EACbS,EAAWT,EAAOiB,IAElBR,EAAWT,EACXU,EAAaV,EAASiB,GAExBO,qBAAU,WACRC,MAAMlB,GACLmB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CrB,EAAmB,CAACiB,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDnB,EAAgBe,EAAKK,MACrBlB,EAAcc,GACdZ,EAAgBW,EAAKI,MAAMH,SAG7B,IACFN,qBAAU,WACS,MAAdX,GAAoC,MAAdE,GACvBU,MAAM,GAAD,OAAIlB,EAAJ,iBAAgBM,EAAhB,oBAAwCE,IAC5CW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIX,EAAgBW,EAAKI,MAAMlB,SAE3C,CAACF,EAAaE,IAUd,qCACE,6EACA,cAAC,EAAD,CACAnB,gBAAiBA,EACjBC,iBAAkBgB,EAClBf,iBAAoB,SAAAqC,GAAC,OAAErB,EAAgBqB,EAAEC,OAAOjC,QAChDJ,eAfJ,SAAgCoC,GAC9BhB,EAAUgB,EAAEC,OAAOjC,OACnBkB,GAAgB,IAcdrB,OAAQU,IACR,qBAAKR,UAAU,SAAf,eACA,cAAC,EAAD,CACAN,gBAAiBA,EACjBC,iBAAkBkB,EAClBjB,iBAAoB,SAAAqC,GAAC,OAAEnB,EAAcmB,EAAEC,OAAOjC,QAC9CH,OAAQS,EACRV,eAnBJ,SAA8BoC,GAC5BhB,EAAUgB,EAAEC,OAAOjC,OACnBkB,GAAgB,UC1CpBgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a8c4c17b.chunk.js","sourcesContent":["import React from 'react'\n\nfunction CurrencyRow(props){\n    const {\n        currencyOptions,\n        selectedCurrency,\n        onChangeCurrency,\n        onChangeAmount,\n        amount\n    } = props\n    return(\n        <>\n        <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount}/>\n        <select value={selectedCurrency} onChange={onChangeCurrency}>\n        {currencyOptions.map(option => <option key={option} value={option}>{option}</option>) }\n        </select>\n        </>\n    )\n}\n\nexport default CurrencyRow;","import React,{useEffect,useState} from 'react'\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst url = \"https://api.exchangeratesapi.io/latest\"\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFrom, setAmountInFrom] =useState(true);\n  console.log(currencyOptions);\n  console.log(exchangeRate);\n  let toAmount,FromAmount\n  if(amountInFrom){\n    FromAmount = amount;\n    toAmount = amount*exchangeRate;\n  }else{\n    toAmount = amount;\n    FromAmount = amount / exchangeRate;\n  }\n  useEffect(()=>{\n    fetch(url)\n    .then(res => res.json())\n    .then(data =>{ \n      const firstCurrency = Object.keys(data.rates)[0];\n      setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n      setFromCurrency(data.base);\n      setToCurrency(firstCurrency);\n      setExchangeRate(data.rates[firstCurrency]);\n    })\n   \n  },[])\n  useEffect(()=>{\n    if(fromCurrency!=null && toCurrency != null){\n      fetch(`${url}?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(res => res.json())\n      .then(data => setExchangeRate(data.rates[toCurrency]))  \n    }\n  },[fromCurrency,toCurrency])\n  function handleFromAmountChange(e){\n    setAmount(e.target.value);\n    setAmountInFrom(true);\n  }\n  function handleToAmountChange(e){\n    setAmount(e.target.value);\n    setAmountInFrom(false);\n  }\n  return (\n    <>\n      <h1>Currency Converter | Foreign Exchange Rates</h1>\n      <CurrencyRow \n      currencyOptions={currencyOptions} \n      selectedCurrency={fromCurrency} \n      onChangeCurrency = {e=>setFromCurrency(e.target.value)} \n      onChangeAmount={handleFromAmountChange}\n      amount={FromAmount}/>\n      <div className=\"equals\">=</div>\n      <CurrencyRow \n      currencyOptions={currencyOptions} \n      selectedCurrency={toCurrency} \n      onChangeCurrency = {e=>setToCurrency(e.target.value)} \n      amount={toAmount} \n      onChangeAmount={handleToAmountChange}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}